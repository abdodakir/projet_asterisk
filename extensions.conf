;
; The "General" category is for certain variables.
;
[general]

static = yes
;
; if static=yes and writeprotect=no, you can save dialplan by
; CLI command "dialplan save" too
;
writeprotect = no

clearglobalvars = no

; The "Globals" category contains global variables that can be referenced
; in the dialplan with the GLOBAL dialplan function:
; ${GLOBAL(VARIABLE)}
; ${${GLOBAL(VARIABLE)}} or ${text${GLOBAL(VARIABLE)}} or any hybrid
; Unix/Linux environmental variables can be reached with the ENV dialplan
; function: ${ENV(VARIABLE)}
;
[globals]

CONSOLE = Console/dsp  ; Console interface for demo
;CONSOLE=DAHDI/1
;CONSOLE=Phone/phone0
IAXINFO = guest  ; IAXtel username/password

NBRCALL = 0

TRUNKMSD = 1  ; MSD digits to strip (usually 1 or 0)
FEATURES = 
DIALOPTIONS = 
RINGTIME = 20
FOLLOWMEOPTIONS = 
PAGING_HEADER = Intercom
CID_6001 = 6001
CID_6000 = 6000
CID_6002 = 6002
CID_6003 = 6003


[public]
;
; ATTENTION: If your Asterisk is connected to the internet and you do
; not have allowguest=no in sip.conf, everybody out there may use your
; public context without authentication.  In that case you want to
; double check which services you offer to the world.
;
include => DLPN_DialPlan1

;
; deuxieme étape
;


; paln d'appel pour gérer les appels reçu
[DLPN_DialPlan1]

include = checkVocale ; appeler la poite vocale
include = ringgroups ; appeler un groupe
include = menuInteractif ; appeler le menu pour avoir de l'aide
include = conferences ; appeler un conference
include = consulterSolde ; pour savoir le solde de compte
include = checkStatus ; pour savoir le status des appelé et le mettre à jour

; appel simple a un numero
exten => _600X,1,NoOp(Appel de ${CALLERID(num)} vers ${EXTEN}) ; no operation, affichage de message dans la console
    same => n,GotoIf($["${EXTEN}" = "6000"]?director:sample) ; tester si on a appelé: oui rediriction vers la secretaire. non continuer l'appel.
    same => n(director),Goto(directorCall,s,1) ; redirection vers le context 'directorCall'.
    same => n(sample),Set(FILENAME=${STRFTIME(${EPOCH},,%H%M%S)}-${EXTEN}) ; creation du nom de fichier.
    same => n,MixMonitor(${FILENAME}.ulaw) ; preparation de l'enregistrement.
    same => n,Dial(SIP/${EXTEN},20) ; appel simple avec enregistement d'appel.
    same => n,VoiceMail(${EXTEN}@default) ; envoyer un message vocale au appellé s'il ne repend.
    same => n,Hangup

; gestion d'appel de directeur
exten => _11,1,NoOp(appel pour le directeur) ; no operation, affichage de message dans la console
    same => n,GotoIf($["${GLOBAL(NBRCALL)}" = "1"]?call:DLPN_DialPlan1,6001,3) ; tester si l'appelant est passer par le secretaire
    same => n(call),Dial(SIP/6000,20) ; appeler le directeur si l'appel est passer par la secretaire
    same => n,Set(GLOBAL(NBRCALL)=0) ; mettre le variable globale a 1
    same => n,Hangup ;

exten => _77,1,Playback(/var/spool/asterisk/monitor/005143-6001.ulaw)

; pour consulter les messages vocaux
;
[checkVocale]
exten = 123,1,VoiceMailMain(${CALLERID(num)}@default) ;pour que les utilisateurs puissent consulter leurs boîtes vocales.

;
; les Guest attends tjrs un admin pour commencer le conference
;   le code des guest est : 1111
;   le code de l'admin est: 5555
; ces codes pour acceder au conference
[conferences]
;conferences - GUEST
exten => _666,1,Progress()
    same => n,Wait(1)
    same => n,ConfBridge(1,default_bridge,default_user)

;conferences - ADMIN
exten => _777,1,Progress()
    same => n,Wait(1)
    same => n,ConfBridge(1,default_bridge,admin_user)

; menu pour choisir les appelés
[menuInteractif]
exten => 888,1,Answer() ; reponse automatique
    same => n,Set(TIMEOUT(response)=10) ;On met un timeout de 10 secondes pour le choix du destinatire
    same => n,agi(googletts.agi,"Bienvenues chez nous!",fr,any,0.9) ;On annonce les différents choix
    same => n,agi(googletts.agi,"Qui souhaitez vous joindre?",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour le directeur tapez 1",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour 6001 tapez 2",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour 6002 tapez 3",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour 6003 tapez 4",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour quiter tapez 5",fr,any,0.9)
    same => n,agi(googletts.agi,"Appuyez sur dièse si vous souhaitez réécouter ce  message",fr,any)
    same => n,Read(choix,beep,1,,,8) ;On attend que l'utilisateur appuis sur une touche
    same => n,GotoIf($["${choix}" = "1"]?directorCall,s,1:) ;Si l'utilisateur appuis sur 1 on va appeler 6000
    same => n,GotoIf($["${choix}" = "2"]?safa:)
    same => n,GotoIf($["${choix}" = "3"]?alli:)
    same => n,GotoIf($["${choix}" = "4"]?dakir:)
    same => n,GotoIf($["${choix}" = "5"]?quiter:)
    same => n,GotoIf($["${choix}" = "#"]?888,3:)
    same => n,Goto(888,3) ;Si l'utilisateur ne fais rien il retourne à l'étape 3 de l'IVR au bout de 10 secondes.
    same => n,Hangup()
    same => n(safa),Dial(SIP/6001,20) ;Si l'utilisateur appuis sur 2 on va appeler 6001.
    same => n,Hangup()
    same => n(alli),Dial(SIP/6002,20) ;Si l'utilisateur appuis sur 3 on va appeler 6002.
    same => n,Hangup()
    same => n(dakir),Dial(SIP/6003,20) ;Si l'utilisateur appuis sur 4 on va appeler 6003.
    same => n(quiter),Hangup() ;Si l'utilisateur tape 5 pour quiter.
    
; reception des appels pour le directeur
[directorCall]
exten = s,1,NoOp(reception d Appel par le secretaire) ; no operation, affichage de message dans la console
exten = s,n,Set(GLOBAL(NBRCALL)=1) ; mettre le variable globale a 1
exten = s,n,Dial(SIP/6001,20,rt) ; appeler la secretaire

; context d'un appel de group
[ringgroups]
exten = 6400,1,Goto(ringroups-custom-1,s,1) ; redirection des appelles

; context des etapes d'appel de groupe
[ringroups-custom-1]
exten => s,1,NoOp(Group 6400)
exten => s,n,Dial(SIP/6000,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6001,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6002,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6003,15,${DIALOPTIONS}i)
exten => s,n,Hangup
;
; troisieme étape
;

; menu pour la consultation et le recharge du solde
[consulterSolde]
exten => 555,1,Answer()
    same => n,agi(googletts.agi,"Binvenue dans la zone de consultation de solde",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour consulter votre solde tapez 1",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour recharger votre compte tapez 2",fr,any,0.9)
    same => n,agi(googletts.agi,"Pour quiter tapez 3",fr,any,0.9)
    same => n,agi(googletts.agi,"Appuyez sur dièse si vous souhaitez réécouter ce  message",fr,any,0.9)
    same => n,Read(choix,beep,1,,,8)
    same => n,GotoIf($["${choix}" = "1"]?zoneSolde,s,1:) ;Si l'utilisateur appuis sur 1 on va appeler 6000
    same => n,GotoIf($["${choix}" = "2"]?zoneRecharge,s,1:) ;Si l'utilisateur appuis sur 2 on va appeler 6001
    same => n,GotoIf($["${choix}" = "3"]?close:) ;Si l'utilisateur appuis sur 3 on va appeler 6002
    same => n,Goto(555,3) ;Si l'utilisateur tape un numéro compris entre 5 et 9 et # il retourne à l'étape 3 de l'IVR
    same => n(close),Hangup ;Si l'utilisateur ne fais rien il retourne à l'étape 3 de l'IVR au bout de 10 secondes.

; pour la consultation du solde
[zoneSolde]
exten => s,1,NoOp(le context de consultation de solde)
    same => n(username),agi(googletts.agi,"Pour consulter votre solde entrer votre numero",fr,any,0.9)
    same => n,Read(numero,beep,4,,3,8) ; pour entrer le numero de tel, accept 4 digits avec 3 essai de n'entré aucune chose pour 8 secondes.
    same => n,Set(password=${CONSULT_userDB(${numero})}) ; recuperation de password et le mettre dans la variable password.
    same => n,agi(googletts.agi,"mot de passe",fr,any,0.9)
    same => n,Read(pass,beep,4,3,8) ; pour entrer le password de tel, accept 4 digits avec 3 essai de n'entré aucune chose pour 8 secondes.
    same => n,GotoIf($["${password}" = "${pass}"]?:username) ; Si l'utilisateur entre un password correcte.
    same => n,Set(solde=${CONSULT_soldeDB(${numero})}) ; recuperation du solde.
    same => n,agi(googletts.agi,"votre solde est ${solde} dirhams",fr,any,0.9)
    same => n,Hangup()

; pour la recharge de compte
[zoneRecharge]
exten => s,1,NoOp(le context de recharge de compte)
    same => n(username),agi(googletts.agi,"Pour recharger votre compte entrer votre numero",fr,any,0.9)
    same => n,Read(numero,beep,4,,3,8) ; pour entrer le numero de tel, accept 4 digits avec 3 essai de n'entré aucune chose pour 8 secondes.
    same => n,Set(password=${CONSULT_userDB(${numero})}) ; recuperation de password et le mettre dans la variable password.
    same => n,agi(googletts.agi,"mot de passe",fr,any,0.9)
    same => n,Read(pass,beep,4,3,8) ; pour entrer le password de tel, accept 4 digits avec 3 essai de n'entré aucune chose pour 8 secondes.
    same => n,GotoIf($["${password}" = "${pass}"]?:username) ; Si l'utilisateur entre un password correcte.
    same => n,agi(googletts.agi,"entrer le montant",fr,any,0.9)
    same => n,Read(recharge,beep,4,,3,8) ; pour entrer le montant a recharger, accept 4 digits avec 3 essai de n'entré aucune chose pour 8 secondes.
    same => n,Set(solde=${CONSULT_soldeDB(${numero})}) ; recuperation du solde existant 
    same => n,NoOp(${MATH(${solde}+${recharge},int)}) ; affichage
    same => n,Set(UPDATE_soldeUP(${numero})=${MATH(${solde}+${recharge},int)}) ; convertion du recharge en entier et mettre à jour le solde dans la base de donnés​.
    same => n,Set(solde=${CONSULT_soldeDB(${numero})}) ; recuperation du solde pour verifier s'il est bien met à jour.
    same => n,agi(googletts.agi,"votre solde maintenant est ${solde} dirhams",fr,any,0.9)
    same => n,Hangup()

;
; quatrieme étape
;

; pour mettre à jour le status des appelé automatiquement
[checkStatus]
exten => 220,1,NoOp(le context de recharge de compte)
    same => n,Set(CMP=1) ; initialisation d'un compteur
    same => n,Set(ODBC_ID=${CONSULT_statusDB()}) ; recuperation des données et stockage de Id pour le fetch.
    same => n,Set(ROWS=${ODBCROWS})
    same => n,While($[${CMP} <= ${ROWS}]) ; boucle pour recuperer tout les numeros des telephones.
    same => n,Set(numero=${ODBC_FETCH(${ODBC_ID})}) ; initialisation d'un compteur
    same => n,Dial(SIP/${numero},20,g)
    same => n,ExecIf($["${DIALSTATUS}" = "ANSWER"]?Set(UPDATE_statusUP(${numero})=1))
    same => n,ExecIf($["${DIALSTATUS}" = "BUSY"]?Set(UPDATE_statusUP(${numero})=2))
    same => n,ExecIf($["${DIALSTATUS}" = "NOANSWER"]?Set(UPDATE_statusUP(${numero})=3))
    same => n,ExecIf($["${DIALSTATUS}" = "CANCEL"]?Set(UPDATE_statusUP(${numero})=4))
    same => n,ExecIf($["${DIALSTATUS}" = "CONGESTION"]?Set(UPDATE_statusUP(${numero})=5))
    same => n,ExecIf($["${DIALSTATUS}" = "CHANUNAVAI"]?Set(UPDATE_statusUP(${numero})=6))
    same => n,ExecIf($["${DIALSTATUS}" = "DONTCALL"]?Set(UPDATE_statusUP(${numero})=7))
    same => n,ExecIf($["${DIALSTATUS}" = "TORTURE"]?Set(UPDATE_statusUP(${numero})=8))
    same => n,ExecIf($["${DIALSTATUS}" = "INVALIDARGS"]?Set(UPDATE_statusUP(${numero})=9))
    same => n,Set(CMP=$[${CMP}+1]) ; incrementation.
    same => n,EndWhile()
    same => n,ODBCFinish()


; CREATE TABLE appel(
;     id int(11) auto_increment not null primary key,
;     nom varchar(10) not null,
;     tel varchar(10) not null unique,
;     status varchar(20),
;     password varchar(20),
;     sig int(11),
;     solde int(11) default 0
;     );

; INSERT INTO appel(nom,tel,status,password,sig,solde) VALUES ('safa','6003','present',0000,1,50);