;
; The "General" category is for certain variables.
;
[general]
;
; If static is set to no, or omitted, then the pbx_config will rewrite
; this file when extensions are modified.  Remember that all comments
; made in the file will be lost when that happens.
;
; XXX Not yet implemented XXX
;
static = yes
;
; if static=yes and writeprotect=no, you can save dialplan by
; CLI command "dialplan save" too
;
writeprotect = no

clearglobalvars = no

; The "Globals" category contains global variables that can be referenced
; in the dialplan with the GLOBAL dialplan function:
; ${GLOBAL(VARIABLE)}
; ${${GLOBAL(VARIABLE)}} or ${text${GLOBAL(VARIABLE)}} or any hybrid
; Unix/Linux environmental variables can be reached with the ENV dialplan
; function: ${ENV(VARIABLE)}
;
[globals]

CONSOLE = Console/dsp  ; Console interface for demo
;CONSOLE=DAHDI/1
;CONSOLE=Phone/phone0
IAXINFO = guest  ; IAXtel username/password
;IAXINFO=myuser:mypass
;TRUNK = DAHDI/G2  ; Trunk interface
NBRCALL = 0
; Note the 'G2' in the TRUNK variable above. It specifies which group (defined
; in chan_dahdi.conf) to dial, i.e. group 2, and how to choose a channel to use
; in the specified group. The four possible options are:
;
; g: select the lowest-numbered non-busy DAHDI channel
;    (aka. ascending sequential hunt group).
; G: select the highest-numbered non-busy DAHDI channel
;    (aka. descending sequential hunt group).
; r: use a round-robin search, starting at the next highest channel than last
;    time (aka. ascending rotary hunt group).
; R: use a round-robin search, starting at the next lowest channel than last
;    time (aka. descending rotary hunt group).
;
TRUNKMSD = 1  ; MSD digits to strip (usually 1 or 0)
FEATURES = 
DIALOPTIONS = 
RINGTIME = 20
FOLLOWMEOPTIONS = 
PAGING_HEADER = Intercom
CID_6001 = 6001
CID_6000 = 6000
CID_6002 = 6002
CID_6003 = 6003


[public]
;
; ATTENTION: If your Asterisk is connected to the internet and you do
; not have allowguest=no in sip.conf, everybody out there may use your
; public context without authentication.  In that case you want to
; double check which services you offer to the world.
;
include => DLPN_DialPlan1

;
;   paln d'appel pour gérer les appels reçu 
;
[DLPN_DialPlan1]

include = checkVocale ; appeler la poite vocale
include = ringgroups ; appeler un groupe
include = menuInteractif ; appeler le menu pour avoir de l'aide
include = conferences ; appeler un conference
include = consulterSolde ; pour savoir le solde de compte

; appel simple a un numero
exten => _600X,1,NoOp(Appel de ${CALLERID(num)} vers ${EXTEN}) ; no operation, affichage de message dans la console
exten => _600X,2,GotoIf($["${EXTEN}" = "6000"]?director:sample) ; tester si on a appelé: oui rediriction vers la secretaire. non continuer l'appel
exten => _600X,3(director),Goto(directorCall,s,1) ; redirection vers le context 'directorCall'
exten => _600X,4(sample),Set(FILENAME=${STRFTIME(${EPOCH},,%H%M%S)}-${EXTEN}) ; creation du nom de fichier
exten => _600X,5,MixMonitor(${FILENAME}.ulaw) ; preparation de l'enregistrement
exten => _600X,6,Dial(SIP/${EXTEN},20) ; appel simple avec enregistement d'appel
exten => _600X,7,VoiceMail(${EXTEN}@default) ; envoyer un message vocale au appellé s'il ne repend
exten => _600X,8,Hangup

; gestion d'appel de directeur
exten => _11,1,NoOp(appel pour le directeur) ; no operation, affichage de message dans la console
exten => _11,n,GotoIf($["${GLOBAL(NBRCALL)}" = "1"]?call:DLPN_DialPlan1,6001,3) ; tester si l'appelant est passer par le secretaire
exten => _11,n(call),Dial(SIP/6000,20) ; appeler le directeur si l'appel est passer par la secretaire
exten => _11,n,Set(GLOBAL(NBRCALL)=0) ; mettre le variable globale a 1
exten => _11,n,Hangup ;

exten => _77,1,Playback(/var/spool/asterisk/monitor/005143-6001.ulaw)

; deuxieme étape
;
; pour consulter les messages vocaux
;
[checkVocale]
exten = 123,1,VoiceMailMain(${CALLERID(num)}@default) ;pour que les utilisateurs puissent consulter leurs boîtes vocales.

;
; les Guest attends tjrs un admin pour commencer le conference
;   le code des guest est : 1111
;   le code de l'admin est: 5555
; ces codes pour acceder au conference
[conferences]
;conferences - GUEST
exten => _666,1,Progress()
exten => _666,2,Wait(1)
exten => _666,3,ConfBridge(1,default_bridge,default_user)

;conferences - ADMIN
exten => _777,1,Progress()
exten => _777,2,Wait(1)
exten => _777,3,ConfBridge(1,default_bridge,admin_user)

;
; Si le TTS ne marche pas il faut utiliser background() pour les audios record.
;   pour recorder des audios utilisez:
;       exten => _55,1,Record(IVR-{FileName}:ulaw)
;       exten => _77,1,Playback(IVR-{FileName}) ;pour assurer que l'audio est bien enregistrer
;
[menuInteractif]
exten => 888,1,Answer() ; reponse automatique
exten => 888,2,Set(TIMEOUT(response)=10) ;On met un timeout de 10 secondes pour le choix du destinatire
exten => 888,n,agi(googletts.agi,"Bienvenues chez nous!",fr,any,0.9) ;On annonce les différents choix
exten => 888,n,agi(googletts.agi,"Qui souhaitez vous joindre?",fr,any,0.9)
exten => 888,n,agi(googletts.agi,"Pour le directeur tapez 1",fr,any,0.9)
exten => 888,n,agi(googletts.agi,"Pour 6001 tapez 2",fr,any,0.9)
exten => 888,n,agi(googletts.agi,"Pour 6002 tapez 3",fr,any,0.9)
exten => 888,n,agi(googletts.agi,"Pour 6003 tapez 4",fr,any,0.9)
exten => 888,n,agi(googletts.agi,"Appuyez sur dièse si vous souhaitez réécouter ce  message",fr,any)
exten => 888,n,WaitExten() ;On attend que l'utilisateur appuis sur une touche

exten => 1,1,Goto(directorCall,s,1) ;Si l'utilisateur appuis sur 1 on va appeler 6000
exten => 2,1,Dial(SIP/6001,20) ;Si l'utilisateur appuis sur 2 on va appeler 6001
exten => 3,1,Dial(SIP/6002,20) ;Si l'utilisateur appuis sur 3 on va appeler 6002
exten => 4,1,Dial(SIP/6003,20) ;Si l'utilisateur appuis sur 4 on va appeler 6003
exten => _[5-9#],1,Goto(888,3) ;Si l'utilisateur tape un numéro compris entre 5 et 9 et # il retourne à l'étape 3 de l'IVR
exten => t,1,Goto(888,3) ;Si l'utilisateur ne fais rien il retourne à l'étape 3 de l'IVR au bout de 10 secondes.

; reception des appels pour le directeur
[directorCall]
exten = s,1,NoOp(reception d Appel par le secretaire) ; no operation, affichage de message dans la console
exten = s,n,Set(GLOBAL(NBRCALL)=1) ; mettre le variable globale a 1
exten = s,n,Dial(SIP/6001,20,rt) ; appeler la secretaire

; context d'un appel de group
[ringgroups]
exten = 6400,1,Goto(ringroups-custom-1,s,1) ; redirection des appelles

; context des etapes d'appel de groupe
[ringroups-custom-1]
exten => s,1,NoOp(Group 6400)
exten => s,n,Dial(SIP/6000,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6001,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6002,15,${DIALOPTIONS}i)
exten => s,n,Dial(SIP/6003,15,${DIALOPTIONS}i)
exten => s,n,Hangup

; troisieme étape
[consulterSolde]

exten => 555,1,Answer()
exten => 555,n,agi(googletts.agi,"Binvenue dans la zone de consultation de solde",fr,any,0.9)
exten => 555,n,agi(googletts.agi,"Pour consulter votre solde tapez 1",fr,any,0.9)
exten => 555,n,agi(googletts.agi,"Pour recharger votre compte tapez 2",fr,any,0.9)
exten => 555,n,agi(googletts.agi,"Pour quiter tapez 3",fr,any,0.9)
exten => 555,n,agi(googletts.agi,"Appuyez sur dièse si vous souhaitez réécouter ce  message",fr,any,0.9)
    ;same => n,Read(choise, custom/request_choise,1,,5)
    ;same => n,GotoIf($["${choise}" = "1"]?zoneSolde,s,1:) ;Si l'utilisateur appuis sur 1 on va appeler 6000
    ;same => n,GotoIf($["${choise}" = "2"]?zoneRecharge,s,1:) ;Si l'utilisateur appuis sur 2 on va appeler 6001
    ;same => n,GotoIf($["${choise}" = "3"]?close:) ;Si l'utilisateur appuis sur 3 on va appeler 6002
    ;same => n,Goto(555,3) ;Si l'utilisateur tape un numéro compris entre 5 et 9 et # il retourne à l'étape 3 de l'IVR
    ;same => n(close),Hangup ;Si l'utilisateur ne fais rien il retourne à l'étape 3 de l'IVR au bout de 10 secondes.

; pour la consultation du solde
[zoneSolde]
exten => s,1,NoOp(le context de consultation de solde)
exten => s,n,agi(googletts.agi,"Pour consulter votre solde entrer votre numero")
    ;same => n(username),Read(numero, custom/request_numero_corto,4,,3,5); Here the system will ask for the short number that will accept 4 digits with 3 attempts to not enter anything for 5 seconds.
    ;same => n,NoOp(${numero}); Verification whether or not the TELEPHONE variable is empty, which means that there is no such short in the DB, and if so, send ;it to the internal context.
    ;same => n,agi(googletts.agi,"mot de passe")
    ;same => n,Read(password, custom/if_correct,1,,5)
    ;same => n,Set(TELEPHONE=${CONSULT_appelDB(${numero})}); Here assign a TELEPHONE variable to the result of the CONSULT_SHORT query by passing the ARG1 the number dialed ($ {EXTEN})
    ;same => n,NoOp(${TELEPHONE}); Verification whether or not the TELEPHONE variable is empty, which means that there is no such short in the DB, and if so, send ;it to the internal context.
    ;same => n,Hangup()
; exten => s,n,agi(googletts.agi,"Votre solde est 50 dirhams")
; exten => s,n,Goto(consulterSolde,555,5)
; same => n,ExecIF($[${LEN(${short})}> 0]?:Hangup()); If after 3 attempts we have not pressed anything we will hang the call.
; same => n,Playback(custom/short_en)
; same => n,SayDigits(${short})
; same => n,GotoIF($[«${correct}» = «1»]?:short)
; same => n(phone),Read(phone,custom/order_phone,9,,3,5); We ask for the destination phone number
; same => n,ExecIF($[${LEN(${phone})}> 0]?:Hangup()); If the phone is empty after 3 attempts, then we hang up the call.
; same => n,Playback(custom/telefono_es)
; same => n,SayDigits(${phone})
; same => n,Read(correct,custom/if_correct,1,,5)
; same => n,GotoIF($[«${correct}» = «1»]?:telephone)
; same => n,Noop(We’re going to insert the short number ${short} and the telephone ${phone} into the database with writesql)
; same => n,Set(WRITE_SHORT()=${short},${phone}); We write in the short table using the WRITE_SHORT function in func_odbc and send the values ​​$ {short} and $ {phone} as; VAL1 and VAL2
; same => n,Hangup()


; pour la recharge de compte
[zoneRecharge]
exten => s,1,NoOp(le context de recharge de solde)
exten => s,n,Answer()
exten => s,n,agi(googletts.agi,"Pour recharger votre compte entrer votre username")
exten => s,n,WaitExten()
exten => s,n,agi(googletts.agi,"mot de passe")
exten => s,n,WaitExten()
exten => s,n,agi(googletts.agi,"entrer le montant a recharger")
exten => s,n,Goto(consulterSolde,555,5)



; CREATE TABLE appel(
;     id int(11) auto_increment not null primary key,
;     nom varchar(10) not null,
;     tel varchar(10) not null unique,
;     status varchar(20) not null,
;     sig int(4),
;     solde int(11) default 0
;     );

; INSERT INTO appel(nom,tel,status,sig,solde) VALUES (‘safa’,‘6003’,‘present’,1,50);